generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  binaryTargets   = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["account", "mapping", "site"]
}

model companys {
  id         Int       @id @default(autoincrement())
  name       String    @unique @db.VarChar(20)
  address    String    @unique @db.VarChar(50)
  explain    String?   @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  teams      teams[]

  @@schema("account")
}

model teams {
  id         Int       @id @default(autoincrement())
  company_id Int?
  explain    String?   @db.VarChar(255)
  name       String    @db.VarChar(20)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  companys   companys? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users[]

  @@index([company_id], map: "idx_teams_company_id")
  @@schema("account")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model users {
  id            Int         @id @default(autoincrement())
  team_id       Int?
  login_code    String      @unique @db.VarChar(20)
  password      String      @db.VarChar(255)
  name          String      @db.VarChar(10)
  email         String      @unique @db.VarChar(30)
  phone         String      @unique @db.VarChar(15)
  position      String      @db.VarChar(15)
  is_active     Boolean?    @default(true)
  refresh_token String?     @db.VarChar(255)
  created_at    DateTime?   @default(now()) @db.Timestamp(6)
  updated_at    DateTime?   @default(now()) @db.Timestamp(6)
  companys      teams?      @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_area     user_area[]

  @@index([team_id], map: "idx_users_team_id")
  @@schema("account")
}

model user_area {
  user_id    Int
  area_id    Int
  created_at DateTime? @default(now()) @db.Timestamp(6)
  areas      areas     @relation(fields: [area_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, area_id])
  @@index([area_id], map: "idx_user_area_area_id")
  @@index([user_id], map: "idx_user_area_user_id")
  @@schema("mapping")
}

model areas {
  id         Int         @id @default(autoincrement())
  name       String      @unique @db.VarChar(20)
  address    String      @unique @db.VarChar(50)
  explain    String?     @db.VarChar(255)
  status     String?     @db.VarChar(255)
  image      String?     @db.VarChar(255)
  created_at DateTime?   @default(now()) @db.Timestamp(6)
  updated_at DateTime?   @default(now()) @db.Timestamp(6)
  user_area  user_area[]
  devices    devices[]

  @@schema("site")
}

model devices {
  id             Int       @id @default(autoincrement())
  area_id        Int?
  name           String    @unique @db.VarChar(50)
  model          String    @db.VarChar(50)
  device_manager String    @db.VarChar(20)
  address        String    @unique @db.VarChar(50)
  explain        String?   @db.VarChar(255)
  status         String?   @db.VarChar(255)
  image          String?   @db.VarChar(255)
  parts          String[]
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  updated_at     DateTime? @default(now()) @db.Timestamp(6)
  areas          areas?    @relation(fields: [area_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([area_id], map: "idx_devices_area_id")
  @@schema("site")
}
